$:
  vscode:
    - name: ddk-dev
      runner:
        cpus: 8
      docker:
        image: docker.cnb.cool/ylarod/ddk/ddk-dev:android12-5.10
      services:
        - vscode
        - docker
      stages:
        - name: env check
          script: |
            echo "CPU cores requested: 8"
            uname -a

main:
  push:
    - name: create-version-branches
      runner:
        cpus: 2
      git:
        enable: true
        submodules: false
      stages:
        - name: Configure Git
          script: |
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"

        - name: Create version branches
          script: |
            apt update && apt install -y jq wget --no-install-recommends
            wget -O mapping.json https://cnb.cool/Ylarod/ddk/-/git/raw/main/mapping.json?download=true
            jq -r '.android[] | [.name] | @tsv' "mapping.json" | while IFS=$'\t' read -r name; do
                echo "Processing version: $name"

                # Create new branch from main
                git checkout main
                git branch -D "$name" || echo "Branch $name does not exist, creating new."
                git checkout -b "$name"

                # Update .cnb.yml
                if [ -f .cnb.yml ]; then
                sed -i "s|docker.cnb.cool/ylarod/ddk/ddk-dev:.*|docker.cnb.cool/ylarod/ddk/ddk-dev:$name|g" .cnb.yml
                echo "Updated .cnb.yml"
                fi

                # Update .devcontainer/devcontainer.json
                if [ -f .devcontainer/devcontainer.json ]; then
                sed -i "s|\"image\": \"ghcr.io/ylarod/ddk:.*\"|\"image\": \"ghcr.io/ylarod/ddk:$name\"|g" .devcontainer/devcontainer.json
                echo "Updated .devcontainer/devcontainer.json"
                fi

                # Remove GitHub Actions workflow
                rm -r .github/workflows

                # Remove any lines after and including 'main:' in .cnb.yml
                sed -i '/^main:/,$d' .cnb.yml

                # Check if there are changes
                if git diff --quiet; then
                echo "No changes to commit"
                git push origin "$name" -f
                echo "✓ Successfully created and pushed branch: $name"
                else
                # Commit changes
                git add -A
                git commit -m "chore: update to $name" -m "Automatically update configuration files to use $name version" -m "- Update Docker image in .cnb.yml" -m "- Update image version in .devcontainer/devcontainer.json"

                # Push to remote
                git push origin "$name" -f
                echo "✓ Successfully created and pushed branch: $name"
                fi

                # Return to main branch
                git checkout main

            done;

        - name: Summary
          script: |
            echo "All version branches processed"
            git branch -r | grep -v HEAD
